---
import LoginLayout from '../layouts/LoginLayout.astro';

const { cookies, url } = Astro;
const redirectTo = url.searchParams.get('redirect') || '/';

// If already authenticated, redirect
if (cookies.has('auth-token')) {
  return Astro.redirect(redirectTo);
}
---

<LoginLayout title="Login">
  <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <h1 class="mt-6 text-center text-3xl font-extrabold dark:text-white text-gray-900">
          üìù
        </h1>
        <h2 class="mt-2 text-center text-sm text-gray-600 dark:text-gray-400">
          Sign in to access
        </h2>
      </div>
      <form id="loginForm" class="mt-8 space-y-6">
        <input type="hidden" id="redirectTo" value={redirectTo}>
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="username" class="sr-only">Username</label>
            <input
              id="username"
              name="username"
              type="text"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border dark:border-gray-700 border-gray-300 dark:bg-gray-800 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-400 dark:focus:border-blue-400 focus:z-10 sm:text-sm"
              placeholder="Username"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Password</label>
            <input
              id="password"
              name="password"
              type="password"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border dark:border-gray-700 border-gray-300 dark:bg-gray-800 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:focus:ring-blue-400 dark:focus:border-blue-400 focus:z-10 sm:text-sm"
              placeholder="Password"
            />
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-gray-900"
          >
            Sign in
          </button>
        </div>
        <div id="error-message" class="text-red-500 text-center text-sm hidden"></div>
      </form>
    </div>
  </div>
</LoginLayout>

<script>
  const form = document.getElementById('loginForm');
  const errorMessage = document.getElementById('error-message');
  const redirectTo = document.getElementById('redirectTo')?.value || '/';

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const username = (document.getElementById('username') as HTMLInputElement).value;
    const password = (document.getElementById('password') as HTMLInputElement).value;

    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password })
      });

      if (response.ok) {
        window.location.href = redirectTo;
      } else {
        const data = await response.json();
        if (errorMessage) {
          errorMessage.textContent = data.message || 'Invalid credentials';
          errorMessage.classList.remove('hidden');
        }
      }
    } catch (error) {
      if (errorMessage) {
        errorMessage.textContent = 'An error occurred. Please try again.';
        errorMessage.classList.remove('hidden');
      }
    }
  });
</script> 